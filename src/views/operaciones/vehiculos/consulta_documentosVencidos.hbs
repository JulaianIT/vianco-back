<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Informe de Documentos Vencidos</title>
    <style>
        /* Estilos CSS */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
        }
        .card {
            width: calc(33.33% - 20px);
            margin-bottom: 20px;
            padding: 20px;
            border-radius: 10px;
            background-color: #fff;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2);
        }
        h2, h3 {
            margin-top: 0;
        }
        button {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            margin-bottom: 20px;
        }
        button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <div class="container" id="app">
        <button id="btn-generar">Generar Informe</button>
        <h1 style="text-align: center; width: 100%;">Informe de Documentos Vencidos</h1>
    </div>

    <script>
document.getElementById('btn-generar').addEventListener('click', function() {
    fetch('/documentos-vencidos')
    .then(response => response.json())
    .then(data => {
        mostrarInforme(data);
    })
    .catch(error => {
        console.error('Error al obtener los datos:', error);
    });
});
function mostrarInforme(data) {
    const container = document.getElementById('app');

    // Verificar si hay documentos que cumplen las condiciones
    const documentosCumplenCondiciones = data.some(vehiculo => {
        return Object.entries(vehiculo).some(([campo, fecha]) => {
            return fecha && calcularDiasRestantes(fecha) <= 8;
        });
    });

    // Si no hay documentos que cumplan las condiciones, mostrar un mensaje
    if (!documentosCumplenCondiciones) {
        container.innerHTML += '<p style="text-align: center; width: 100%;">No hay documentos próximos a vencer o vencidos dentro del rango de 8 días.</p>';
        return;
    }

    // Construye el HTML para mostrar la lista de vehículos con documentos
    let html = '';
    let vencidosHtml = '';
    let proximosHtml = '';
    data.forEach(vehiculo => {
        // Verificar si el vehículo tiene algún documento próximo a vencer o vencido
        const tieneDocumentoVencido = Object.entries(vehiculo).some(([campo, fecha]) => {
            return fecha && calcularDiasRestantes(fecha) <= 8;
        });

        // Si el vehículo no tiene ningún documento próximo a vencer o vencido, omitirlo
        if (!tieneDocumentoVencido) {
            return;
        }

        // Agregar detalles de los documentos que están dentro del rango de 8 días hacia adelante o vencidos
        const placa = vehiculo['Placa'];
        const conductor = vehiculo['Conductor'];
        let documentosHtml = '';
        Object.entries(vehiculo).forEach(([campo, fecha]) => {
            if (fecha && calcularDiasRestantes(fecha) <= 8) {
                if (campo !== 'Placa' && campo !== 'Conductor') {
                    const diasRestantes = calcularDiasRestantes(fecha);
                    const colorFondo = diasRestantes <= 0 ? '#FFD1D1' : '#FFF7CC'; // Rojo claro o amarillo claro
                    const tituloDocumento = campo.replace(/_/g, ' '); // Reemplazar guiones bajos con espacios
                    documentosHtml += `<li style="background-color: ${colorFondo}; margin-bottom: 5px; padding: 5px; border-radius: 5px;">${tituloDocumento}: <span style="color: black;">${fecha}</span></li>`;
                }
            }
        });

        // Construir secciones para documentos vencidos y próximos a vencer
        if (documentosHtml !== '') {
            if (documentosHtml.includes('#FFD1D1')) { // Si hay documentos vencidos
                vencidosHtml += `<div class="card">
                                    <h2>Vehículo: ${placa}</h2>
                                    <h3>Conductor: ${conductor}</h3>
                                    <h4>Documentos Vencidos</h4>
                                    <ul>${documentosHtml}</ul>
                                </div>`;
            }
            if (documentosHtml.includes('#FFF7CC')) { // Si hay documentos próximos a vencer
                proximosHtml += `<div class="card">
                                    <h2>Vehículo: ${placa}</h2>
                                    <h3>Conductor: ${conductor}</h3>
                                    <h4>Documentos Próximos a Vencer</h4>
                                    <ul>${documentosHtml}</ul>
                                </div>`;
            }
        }
    });

    // Insertar el HTML en el contenedor
    container.innerHTML += vencidosHtml + proximosHtml;
}

function calcularDiasRestantes(fecha) {
    // Formatea la fecha en el formato "YYYY-MM-DD"
    const partesFecha = fecha.split('/');
    const fechaFormateada = `${partesFecha[2]}-${partesFecha[1]}-${partesFecha[0]}`;
    
    const unDia = 1000 * 60 * 60 * 24; // Milisegundos en un día
    const fechaDocumento = new Date(fechaFormateada);
    const hoy = new Date();
    const diferencia = fechaDocumento.getTime() - hoy.getTime();
    return Math.ceil(diferencia / unDia);
}

    </script>
</body>
</html>
