<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Resultados de Servicios Tercerizados</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f3f3f3;
        }

        header {
            background-color: #90c9a7;
            color: #fff;
            padding: 20px;
            text-align: center;
        }

        h1 {
            margin-top: 20px;
            text-align: center;
            color: #666567;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            padding: 12px 15px;
            text-align: center;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #90c9a7;
            color: #fff;
        }

        tr:hover {
            background-color: #f2f2f2;
        }

        footer {
            background-color: #90c9a7;
            color: #fff;
            padding: 10px 0;
            text-align: center;
            position: fixed;
            bottom: 0;
            width: 100%;
        }

        .save-button {
            background-color: #90c9a7;
            color: white;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
        }

        .save-button:hover {
            background-color: #76b090;
        }

        [contenteditable="true"] {
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>
    <header>
        <h1>ASIGNACION DE CONDUCTOR TERCERIZADO</h1>
    </header>

    <table>
        <thead>
            <tr>
                <th>Solicitado por:</th>
                <th>Número de Tarea</th>
                <th>Fecha del Servicio</th>
                <th>Hora del Servicio</th>
                <th>Tipo de Vehículo</th>
                <th>Otro Vehículo</th>
                <th>Cliente</th>
                <th>Otro Cliente</th>
                <th>Punto de Origen</th>
                <th>Punto de Destino</th>
                <th>Observaciones</th>
                <th>Persona de Contacto</th>
                <th>Contacto</th>
                <th>Valor facturado</th>
                <th>Información de Asignación</th>
                <th>Estado</th>
                <th>Placa</th>
                <th>Conductor</th>
                <th>Celular</th>
                                <th>provedor</th>

                                    <th>COSTO PROVEDOR</th>
                <th>Margen de Ganancia</th>
                <th>Ganancia Neta</th>
                <th>Facturación</th>
                
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            {{#each servicios}}
                <tr data-id="{{this.id}}">
                    <td>{{this.realizadopor}}</td>
                    <td>{{this.numero_tarea}}</td>
                    <td class="fecha-servicio">{{this.fecha_servicio}}</td>
                    <td>{{this.hora_servicio}}</td>
                    <td>{{this.tipo_vehiculo}}</td>
                    <td>{{this.otro_vehiculo}}</td>
                    <td>{{this.cliente}}</td>
                    <td>{{this.otro_cliente}}</td>
                    <td>{{this.punto_origen}}</td>
                    <td>{{this.punto_destino}}</td>
                    <td>{{this.observaciones}}</td>
                    <td>{{this.nombrePersona}}</td>
                    <td>{{this.contacto}}</td>
                    <td class="valor-dadoCliente" contenteditable="true">{{this.valor_dadoCliente}}</td>
                    <td>{{this.informacion_asignacion}}</td>
                    <td>{{this.estado}}</td>
                    <td>{{this.placa}}</td>
                    <td>{{this.conductor}}</td>
                    <td>{{this.celular}}</td>
                                        <td>{{this.Provedor}}</td>

                    <td class="coste-proveedor" contenteditable="true">{{this.valorque_noscobran}}</td>
                    <td class="margen-ganancia"></td>
                    <td class="ganancia-neta"></td>
                    <td class="facturacion" data-facturacion="{{this.facturacion}}" contenteditable="true">
                        <select>
                             <option value="PENDIENTE">PENDIENTE</option>
                             <option value="VALIDADO">VALIDADO</option>
                            <option value="PAGADO">PAGADO</option>
                        </select>
                    </td>
                    <td><button class="save-button">Guardar</button></td>
                </tr>
            {{/each}}
        </tbody>
    </table>

    <footer>
        <p>© 2024 Servicios Tercerizados. Todos los derechos reservados.</p>
    </footer>

    <script>

        document.addEventListener('DOMContentLoaded', function() {
            const dateCells = document.querySelectorAll('.fecha-servicio');
            dateCells.forEach(cell => {
                const date = new Date(cell.textContent);
                const options = { year: 'numeric', month: 'long', day: 'numeric' };
                cell.textContent = date.toLocaleDateString('es-ES', options);
            });

            const formatNumber = (number) => {
                return (number % 1 === 0) ? number.toString() : number.toFixed(2).replace(/\.?0+$/, '');
            };

            const actualizarCalculos = (row) => {
                const margenCell = row.querySelector('.margen-ganancia');
                const gananciaNetaCell = row.querySelector('.ganancia-neta');
                const valorCliente = parseFloat(row.querySelector('.valor-dadoCliente').textContent.trim());
                const costeProveedor = parseFloat(row.querySelector('.coste-proveedor').textContent.trim());

                if (!isNaN(valorCliente) && !isNaN(costeProveedor)) {
                    const margen = ((valorCliente - costeProveedor) / valorCliente) * 100;
                    const gananciaNeta = valorCliente - costeProveedor;

                    margenCell.textContent = formatNumber(margen) + '%';
                    gananciaNetaCell.textContent = formatNumber(gananciaNeta);
                } else {
                    margenCell.textContent = 'N/A';
                    gananciaNetaCell.textContent = 'N/A';
                }
            };

            document.querySelectorAll('tbody tr').forEach(row => {
                actualizarCalculos(row);

                row.querySelector('.valor-dadoCliente').addEventListener('input', function() {
                    actualizarCalculos(row);
                });

                row.querySelector('.coste-proveedor').addEventListener('input', function() {
                    actualizarCalculos(row);
                });
            });
        });

document.querySelectorAll('.save-button').forEach(button => {
    button.addEventListener('click', function() {
        const row = this.closest('tr');
        const id = row.dataset.id;
        const valorCliente = row.querySelector('.valor-dadoCliente').textContent.trim();
        const costeProveedor = row.querySelector('.coste-proveedor').textContent.trim();
        const facturacion = row.querySelector('.facturacion select').value;

        fetch(`/guardar_VERIFICACIONSERVICIO_TERCERO/${id}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                valorCliente: valorCliente,
                costeProveedor: costeProveedor,
                facturacion: facturacion
            })
        })
        .then(response => {
            if (response.ok) {
                alert('Datos guardados exitosamente');
                // Aquí puedes hacer cualquier otra acción necesaria después de guardar los datos
            } else {
                alert('Error al guardar los datos');
            }
        })
        .catch(error => {
            console.error('Error al procesar la solicitud:', error);
            alert('Error al procesar la solicitud');
        });
    });
});


document.addEventListener('DOMContentLoaded', function() {
    const facturacionCells = document.querySelectorAll('.facturacion');

    facturacionCells.forEach(cell => {
        const facturacionDB = cell.dataset.facturacion; // Obtiene el valor de facturación de la base de datos
        const selectElement = cell.querySelector('select');
        
        // Si el valor de facturación es null o está vacío, establece el valor predeterminado como "PENDIENTE"
        // De lo contrario, establece el valor de facturación de la base de datos
        selectElement.value = facturacionDB ? facturacionDB : 'PENDIENTE';
    });
});

    </script>
</body>
</html>
