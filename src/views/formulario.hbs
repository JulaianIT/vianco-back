<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.1/html2canvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.3.1/jspdf.umd.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="icon" href="/imagenes/logo pestaña.PNG" type="image/x-icon">
    <link rel="shortcut icon" href="/imagenes/logo pestaña.PNG" type="image/x-icon">
    <link href="https://fonts.googleapis.com/css2?family=ABeeZee:ital@0;1&display=swap" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detalle del Formulario</title>
    <style>
        main {
            width: 100%;
            padding: 20px;
            margin: auto;
            margin-top: 100px;
        }
        *{
            margin: 0;
        }
        body{
            background-color: #d9d9d9;
        }
        h1{
            font-size: 27px;
            padding: 7px;
            margin: 0;
            text-align: center;
            color: #f3f3f3;
            background-color: #666567;
        }
        p{
            font-size: 15px;
            padding: 30px;
        }
        .contenido{
            top: -100px;
            position: relative;
            left: 20%;
            max-width: 850px;
            border-radius: 6px;
            background-color: #fff;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
            border: 18px solid #666567;
        }
        #viancoo{
            text-align: justify;
        }
        .protocolo{
            background-color: #90c9a7;
        }
        p strong{
            padding: 30px;
            border: 4px solid #666567;
            justify-content: center;
        }
        table td{
            border: 5px solid #666567;
            margin: 10px;
            font-size: 15px;
            padding: 10px;
        }
        .foto_condcutor{
            background-color: #90c9a7;
            padding: 22px;
        }
        strong {
            text-transform: uppercase;
            font-size: 16px;
        }
        .LETRA {
            display: flex;
        }
        .info {
            display: flex;
            flex-wrap: wrap;
        }
        .texto {
            padding: 0;
            margin: 0;
            font-size: 20px;
            position: relative;
            left: 90px;
            text-align: justify;
        }
        .code img {
            padding: 0;
            margin: 0;
            position: relative;
            top: -250px;
            left: 520px;
            width: 250px;
        }
        .asig{
            font-size: 21px;
            padding: 7px;
            margin: 0;
            text-align: center;
            color: #f3f3f3;
            background-color: #666567;
        }
        .protocolo{
            background-color: #90c9a7;
        }
        .volver-btn {
            position: relative;
            left: 62%;
            top: -70px;
            background-color:#90c9a7;
            color: #000;
            border: none;
            padding: 22px 30px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            display: inline-block;
            margin-top: 20px;
            font-size: 20px;
            font-weight: bold;
            text-decoration: none;
        }
        .volver-btn:hover {
            background-color: #d9d9d9;
        }
        .volver {
            position: relative;
            left: 20%;
            top: -70px;
            background-color:#90c9a7;
            color: #000;
            border: none;
            padding: 22px 30px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            display: inline-block;
            margin-top: 20px;
            font-size: 20px;
            font-weight: bold;
            text-decoration: none;
        }
        .botones {
            text-align: center;
        }
        .volver:hover {
            background-color: #d9d9d9;
        }
        .texto{
            padding: 0;
            font-size: 23px;
            position: relative;
            left: 10px;
        }
        #whaas{
            position: relative;
            width: 30px;
            top: 5px;
            padding-right: 12px;
        }
        .body{
            font-family: "ABeeZee", sans-serif;
            font-weight: 400;
            font-style: normal;
        }
        #gmael{
            width: 30px;
            padding-right: 12px;
        }
        #qr{
            position: relative;
            width: 280px;
            left: 480px;
            top: -370px;
            padding: 0;
            margin: 0;
        }
        strong{
            padding: 5px;
            font-size: 25px;
        }
        .respuestas{
            font-size: 20px;
            padding: 0px;
            text-transform: uppercase;
        }
        .obs{
            font-size: 32px;
        }
        .asig{
        }
        .volvera{
            position: relative;
            left: 15%;
            top: -70px;
            background-color:#90c9a7;
            color: #000;
            border: none;
            padding: 22px 30px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            display: inline-block;
            margin-top: 20px;
            font-size: 20px;
            font-weight: bold;
            text-decoration: none;
        }
        .volvera:hover{
            background-color: #d9d9d9;
        }
        .PRO {
            text-align: center;
            width: 100%;
        }
        .clientee{
            position: relative;
            left: 890px;
            top: -1490px;
        }
        .input-field select {
            outline: none;
            font-size: 16px;
            color: #333;
            border-radius: 5px;
            border: 1px solid #aaa;
            padding: 10px 15px;
            height: 42px;
            margin: 8px 0;
            box-sizing: border-box;
        }
        .input-field select:focus {
            border-color: #888;
            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.13);
        }
        .input-field select option {
            font-size: 16px;
            font-weight: 200;
            color: #333;
            background-color: #fff;
        }
        .input-field::after {
            content: '\25BC';
            transform: translateY(-50%);
            pointer-events: none;
        }
        .input-field select option:hover {
            background-color: #d9d9d9;
        }
        .input-field select option {
            font-size: 20px;
            font-weight: 400;
            color: #333;
            background-color: #fff;
        }
        .input-field select option:hover,
        .input-field select option:focus {
            background-color: #90c9a7;
            color: #000;
        }
        .selecione{
            position: relative;
        }
        .felii{
            position: relative;
            left: 28%;
            top: -95px;
            width: 700px;
            font-size: 30px;
            background-color: #fff;
            border-radius: 10px;
            text-align: center;
        }
        #fotoConductor{
            left: 15px;
            position: relative;
            width: 200px;
            align-items: center
        }
        #fotoVehiculo{
            position: relative;
            width: 100%;
            align-items: center
        }
        .respuestas {
            text-align: center;
            font-size: 25px;
            width: 500px;
        }
        .respuestass {
            text-align: center;
            font-size: 25px;
            width: 500px;
        }
        header{
            background-color: #fff;
        }
        .selecione{
            padding: 15px;
            background-color: #90c9a7;
            border: solid 10px #90c9a7;
            margin: 20px;
            top: 30px;
            position: relative;
            left: 30%;
        }
        body{
        }
        .texto{
            margin: 10px;
            margin-right: 30px;
            text-align: justify;
            font-size: 30px;
        }
        .FOTO{
            font-size: 20px;
            align-items: center;
            white-space: 30px;
        }
        #logo{
            position: relative;
            left: 90px;
            width: 400px;
        }
        #vigilado {
            float: right;
            width: 300px;
        }
    </style>
</head>
<body>
    <header>
        <img id="membrete" src="/imagenes/menbrete.png"/>
        <img id="logo" src="../imagenes/logo vianco.png"/>
        <img id="vigilado" src="../imagenes/vigilado.png"/>
        <hr>
    </header>
    <div class="input-field">
        <h2 class="selecione">{{datosFormulario.cliente}}</h2>
    </div> 
    <main>
        <div class="contenido" id="contenido">
            <div class="protocolo">
                <img class="PRO" id="fotoCliente" src="" alt="Foto del cliente">
            </div>
            <h1>DATOS DEL SERVICIO</h1>
            <table>
                <tr>
                    <td><strong>Nombre Pasajero:</strong></td>
                    <td class="respuestas">{{datosFormulario.nombre_pasajero}}</td>
                    <td><strong>Fecha:</strong></td>
                    <td class="respuestas">{{datosFormulario.fecha}}</td>
                </tr>
                <tr>
                    <td><strong>N° de Vuelo:</strong></td>
                    <td class="respuestas">{{datosFormulario.vuelo}}</td>
                    <td><strong>Hora:</strong></td>
                    <td class="respuestas">{{datosFormulario.hora}}</td>
                </tr>
                <tr>
                    <td class="asig" colspan="6"><h1>DATOS DEL CONDUCTOR:</h1></td>
                </tr>
                <tr>
                    <td><strong>Conductor asignado:</strong></td>
                    <td class="FOTO">{{datosFormulario.conductor}}</td>
                    <td><strong>Placa:</strong></td>
                    <td class="respuestass">{{datosFormulario.placa}}</td>
                </tr>
                <tr>
                    <td colspan="1" style="max-width: 20px;">
                        <img id="fotoConductor" src="" alt="Foto del conductor">
                    </td>
                    <td colspan="3">
                        <strong>:</strong>
                        <img id="fotoVehiculo" src="" alt="Foto del vehículo">
                    </td>
                </tr>
                <tr>
                    <td><strong>Tipo de Vehículo:</strong></td>
                    <td class="respuestas">{{datosFormulario.tipo_vehiculo}}</td>
                    <td><strong>N°. Pasajeros:</strong></td>
                    <td class="respuestas">{{datosFormulario.cantidad_pasajeros}}</td>
                </tr>
                <tr>
                    <td><strong>Teléfono:</strong></td>
                    <td colspan="3" class="respuestas">{{datosFormulario.celular_conductor}}</td>
                </tr>
                <tr>
                    <td colspan="1" class="obs"><strong>Observaciones:</strong></td>
                    <td colspan="3" class="respuestas">{{datosFormulario.observaciones}}</td>
                </tr>
                <tr>
                    <td class="asig" colspan="6"><h1>POLITICA DE SERVICIO</h1></td>
                </tr>
                <tr>
                    <td colspan="6">
                        <div class="texto">
                            "Hola Si desea realizar modificaciones a la reserva de transporte, por favor comuníquese por los siguientes medios: <br><br>
                            <img id="gmael" src="/gmail.jpg" alt="">operaciones@viancotetransporta.com <br>
                            <img id="whaas" src="/whatsapp-icon.png" alt="">+57 315 670 3770 <br> 
                            <br>
                            La cancelación y cambios se deben realizar 12 horas antes del servicio. La compañía Vianco Te Transporta SAS protegerá sus datos personales y no serán de uso público ni comercial. Vianco Te Transporta SAS se abstiene de realizar servicios de turismo y transporte o actividad en el cual involucra el Turismo Sexual infringiendo la Ley 679 de 2001."
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </main>
    <h2 class="felii">"FELICIDADES TU RECEPCION HA SIDO CONFIRMADA A LOS ENCARGADOS DEL AEROPUERTO"<hr></h2>
    <a href="/" class="volver">Volver al Menú</a>
    <button class="volver-btn" id="convertirBtn">DESCARGAR</button>
    <button class="volvera" id="enviarCorreoBtn">enviar por correo electrónico</button>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/html-to-image/0.9.1/html-to-image.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.1/html2canvas.min.js"></script>
      <script>
        document.getElementById('convertirBtn').addEventListener('click', function() {
            const element = document.getElementById('contenido');
            if (element) {
                html2canvas(element).then(function(canvas) {
                    const imgData = canvas.toDataURL('image/png');
                    const { jsPDF } = window.jspdf;
                    const pdf = new jsPDF('p', 'pt', 'a4');
                    const pdfWidth = pdf.internal.pageSize.getWidth();
                    const pdfHeight = pdf.internal.pageSize.getHeight();
                    const maxWidth = pdfWidth * 0.9;
                    const maxHeight = pdfHeight * 0.9;
                    const imgWidth = canvas.width;
                    const imgHeight = canvas.height;

                    let width, height;
                    if (imgWidth / imgHeight > maxWidth / maxHeight) {
                        width = maxWidth;
                        height = (imgHeight * maxWidth) / imgWidth;
                    } else {
                        height = maxHeight;
                        width = (imgWidth * maxHeight) / imgHeight;
                    }

                    const xOffset = (pdfWidth - width) / 2;
                    const yOffset = (pdfHeight - height) / 2;

                    pdf.addImage(imgData, 'PNG', xOffset, yOffset, width, height, undefined, 'FAST');
                    pdf.save('Recepcion.pdf');
                }).catch(function(error) {
                    console.error('Error capturing the element:', error);
                });
            } else {
                console.error('Element with ID "contenido" not found.');
            }
        });

        document.getElementById('enviarCorreoBtn').addEventListener('click', function() {
            const element = document.getElementById('contenido');
            if (element) {
                html2canvas(element).then(function(canvas) {
                    const imgData = canvas.toDataURL('image/png');
                    const { jsPDF } = window.jspdf;
                    const pdf = new jsPDF('p', 'pt', 'a4');
                    const pdfWidth = pdf.internal.pageSize.getWidth();
                    const pdfHeight = pdf.internal.pageSize.getHeight();
                    const maxWidth = pdfWidth * 0.9;
                    const maxHeight = pdfHeight * 0.9;
                    const imgWidth = canvas.width;
                    const imgHeight = canvas.height;

                    let width, height;
                    if (imgWidth / imgHeight > maxWidth / maxHeight) {
                        width = maxWidth;
                        height = (imgHeight * maxWidth) / imgWidth;
                    } else {
                        height = maxHeight;
                        width = (imgWidth * maxHeight) / imgHeight;
                    }

                    const xOffset = (pdfWidth - width) / 2;
                    const yOffset = (pdfHeight - height) / 2;

                    pdf.addImage(imgData, 'PNG', xOffset, yOffset, width, height, undefined, 'FAST');

                    const pdfBlob = pdf.output('blob');
                    const formData = new FormData();
                    formData.append('pdf', pdfBlob, 'Recepcion.pdf');

                    const destinatario = prompt('Por favor, ingrese la dirección de correo electrónico del destinatario:');
                    if (!destinatario) {
                        alert('Debe ingresar la dirección de correo electrónico del destinatario.');
                        return;
                    }
                    formData.append('destinatario', destinatario);

                    fetch('/enviar-email-pdf', {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => {
                        if (response.ok) {
                            alert('El correo electrónico ha sido enviado correctamente.');
                        } else {
                            alert('Hubo un problema al enviar el correo electrónico.');
                        }
                    })
                    .catch(error => {
                        console.error('Error al enviar el correo electrónico:', error);
                        alert('Hubo un error al enviar el correo electrónico.');
                    });
                }).catch(function(error) {
                    console.error('Error capturing the element:', error);
                });
            } else {
                console.error('Element with ID "contenido" not found.');
            }
        });

        document.addEventListener('DOMContentLoaded', function() {
            const clienteSelect = document.getElementById('cliente');
            const fotoCliente = document.getElementById('fotoCliente');

            fetch('/clientes')
                .then(response => response.json())
                .then(clientes => {
                    clientes.forEach(cliente => {
                        const option = document.createElement('option');
                        option.value = cliente.nombre;
                        option.textContent = cliente.nombre;
                        clienteSelect.appendChild(option);
                    });

                    clienteSelect.addEventListener('change', function() {
                        const clienteSeleccionado = clienteSelect.value;
                        const cliente = clientes.find(c => c.nombre === clienteSeleccionado);
                        fotoCliente.src = cliente.foto;
                        fotoCliente.alt = cliente.nombre;
                    });
                })
                .catch(error => {
                    console.error('Error al obtener los clientes:', error);
                });
        });

        document.addEventListener('DOMContentLoaded', function() {
            const clienteSelect = document.getElementById('cliente');
            const clienteH2 = document.querySelector('.selecione');
            const fotoCliente = document.getElementById('fotoCliente');

            function mostrarFotoCliente(idCliente) {
                console.log('Mostrando foto del cliente con ID:', idCliente);
                fetch(`/cliente?id=${idCliente}`)
                    .then(response => response.json())
                    .then(cliente => {
                        console.log('Datos del cliente:', cliente);
                        fotoCliente.src = cliente.foto;
                        fotoCliente.alt = cliente.nombre;
                        console.log('Foto del cliente establecida:', fotoCliente.src);
                    })
                    .catch(error => {
                        console.error('Error al obtener los datos del cliente:', error);
                    });
            }

            fetch('/clientes')
                .then(response => response.json())
                .then(clientes => {
                    clientes.forEach(cliente => {
                        const option = document.createElement('option');
                        option.value = cliente.id;
                        option.textContent = cliente.nombre;
                        clienteSelect.appendChild(option);
                    });

                    const clienteSeleccionadoH2 = clienteH2.textContent;
                    clienteSelect.value = clienteSeleccionadoH2;
                    mostrarFotoCliente(clienteSeleccionadoH2);
                })
                .catch(error => {
                    console.error('Error al obtener los clientes:', error);
                });
        });

        document.addEventListener('DOMContentLoaded', function() {
            const clienteH2 = document.querySelector('.selecione');
            const fotoCliente = document.getElementById('fotoCliente');

            function mostrarFotoCliente(nombreCliente) {
                fetch(`/clientePorNombre?nombre=${nombreCliente}`)
                    .then(response => response.json())
                    .then(cliente => {
                        fotoCliente.src = cliente.foto;
                        fotoCliente.alt = cliente.nombre;
                    })
                    .catch(error => {
                        console.error('Error al obtener los datos del cliente:', error);
                    });
            }

            const clienteSeleccionadoH2 = clienteH2.textContent;
            mostrarFotoCliente(clienteSeleccionadoH2);
        });

        function mostrarFotoConductor(placa) {
            console.log('Placa a buscar:', placa);
            fetch(`/obtenerFotoConductor?placa=${placa}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('No se pudo obtener la foto del conductor');
                    }
                    return response.blob();
                })
                .then(blob => {
                    const url = URL.createObjectURL(blob);
                    const fotoConductor = document.getElementById('fotoConductor');
                    fotoConductor.src = url;
                })
                .catch(error => {
                    console.error('Error al obtener la foto del conductor:', error);
                });
        }

        const placaConductor = document.querySelector('.respuestass').textContent;
        mostrarFotoConductor(placaConductor);

        function mostrarFotoVehiculo(placa) {
            console.log('Placa a buscar:', placa);
            fetch(`/obtenerFotoVehiculo?placa=${placa}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('No se pudo obtener la foto del vehículo');
                    }
                    return response.blob();
                })
                .then(blob => {
                    const url = URL.createObjectURL(blob);
                    const fotoVehiculo = document.getElementById('fotoVehiculo');
                    fotoVehiculo.src = url;
                })
                .catch(error => {
                    console.error('Error al obtener la foto del vehículo:', error);
                });
        }

        const placaVehiculo = document.querySelector('.respuestass').textContent;
        mostrarFotoVehiculo(placaVehiculo);
    </script>
</body>
</html>
