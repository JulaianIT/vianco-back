<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Seleccionar Cliente, Placa y Conductor</title>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.1/html2canvas.min.js"></script>

    <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <link rel="icon" href="/imagenes/logo pestaña.PNG" type="image/x-icon">
    <link rel="shortcut icon" href="/imagenes/logo pestaña.PNG" type="image/x-icon">

</head>
 <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f5f5f5;
    }

    header{


        background-color: white;
    }

 #logo {
            position: relative;
            left: 90px;
            width: 400px;
        }
        
        #vigilado {
            float: right;
            width: 300px;
        }

    h1 {
      color: #90c9a7;
      text-align: center;
      margin-top: 30px;
      font-size: 40px;
    }

    form {
      max-width: 50%;
      margin: 0 auto;
      background-color: #fff;
      padding: 30px;
      border-radius: 8px;
            font-size: 40px;

      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    label {
      font-size: 26px;
      color: #333;
    }

    select, button {
      width: 100%;
      padding: 10px;
      margin: 8px 0;
      border-radius: 5px;
      border: 1px solid #ccc;
      background-color: #f9f9f9;
            font-size: 23px;

      transition: border-color 0.3s ease;
    }

    select:focus, button:focus {
      outline: none;
      border-color: #3498db;
    }

    button {
      background-color:#90c9a7;
      color: #fff;
      border: none;
      cursor: pointer;
    }

    button:hover {
      background-color: #90c9a7;
    }

    #resultado {
      margin-top: 20px;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      background-color: #fff;
    }
    .FO{

        padding: 16px;
        background-color: white;
        border: 3px solid #d9d9d9;
position: relative;
left: 20%;
align-items: center;
width: 50%;

    }
  </style>

<body>
        <header>
        <img id="membrete"   src="/imagenes/menbrete.png"/>
        <img  id="logo"      src="/imagenes/logo vianco.png"/>
        <img  id="vigilado"  src="/imagenes/vigilado.png"/>
   
        
       
 




    </header>
    <br>
    <br>
    <div class="FO">
  <h1 id="fu" >GENERAR FUEC</h1>
  <label for="cliente">Selecciona el cliente:</label>
  <select id="cliente"></select>
  <br>
  <label for="placa">Selecciona la placa del vehículo:</label>
  <select id="placa"></select>
  <br>
  <label for="conductor1">Selecciona el primer conductor:</label>
  <select id="conductor1">    <option value="NA">N/A</option> <!-- Agregar la opción N/A -->
</select>
  <br>
  <label for="conductor2">Selecciona el segundo conductor:</label>
  <select id="conductor2">    <option value="NA">N/A</option> <!-- Agregar la opción N/A -->
</select>
  <br>
  <label for="conductor3">Selecciona el tercer conductor:</label>
  <select id="conductor3">    <option value="NA">N/A</option> <!-- Agregar la opción N/A -->
</select>
  <br>
  <button onclick="buscarInformacion()">GENERAR FUEC</button>
</div>
<br>
<div class="contenido" id="contenido" style="display: inline-block; width: auto; height: auto;">

  <div id="resultado"></div>


</div>
<button class="volver-btn " id="convertirBtn">DESCARGAR</button>

<script>
  let clientes = {};

document.addEventListener('DOMContentLoaded', function() {
  fetch('/clientes2') // Cambiar la ruta a /clientes2
    .then(response => response.json())
    .then(clientesData => {
      clientesData.forEach(cliente => {
        clientes[cliente.nombre] = cliente;
      });
      // Llenar el select de clientes
      const clienteSelect = document.getElementById('cliente');
      for (const nombre in clientes) {
        const option = document.createElement('option');
        option.text = nombre;
        clienteSelect.add(option);
      }
    })
    .catch(error => {
      console.error('Error al obtener clientes:', error);
    });
});

function buscarInformacion() {
  const clienteSelect = document.getElementById('cliente');
  const nombreCliente = clienteSelect.options[clienteSelect.selectedIndex].text;
  if (!clientes[nombreCliente]) {
    console.error('No se encontraron datos para el cliente seleccionado.');
    return;
  }
  const contratante = clientes[nombreCliente].contratante;
  console.log('contratante', contratante);
  
   const N_contrato = clientes[nombreCliente].N_contrato;
  console.log('Valor de N_contrato:', N_contrato);

     const fecha_inicio = clientes[nombreCliente].fecha_inicio;
  console.log('fecha_inicio', fecha_inicio);
  
    const fecha_final = clientes[nombreCliente].fecha_final;
  console.log('fecha_final', fecha_final);
  
  const placaSelect = document.getElementById('placa');
  const placa = placaSelect.value;
  const conductorSelect1 = document.getElementById('conductor1');
  const conductor1 = conductorSelect1.value;
  const conductorSelect2 = document.getElementById('conductor2');
  const conductor2 = conductorSelect2.value;
  const conductorSelect3 = document.getElementById('conductor3');
  const conductor3 = conductorSelect3.value;

  fetch(`/fuec/${encodeURIComponent(nombreCliente)}/${placa}/${encodeURIComponent(conductor1)}/${encodeURIComponent(conductor2)}/${encodeURIComponent(conductor3)}/${encodeURIComponent(N_contrato)}/${encodeURIComponent(contratante)}/${encodeURIComponent(fecha_inicio)}/${encodeURIComponent(fecha_final)}`)
    .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.text();
        })
        .then(html => {
            document.getElementById('resultado').innerHTML = html;
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error al buscar información. Por favor, inténtalo de nuevo.');
        });
}

document.addEventListener('DOMContentLoaded', function() {
    // Llenar select de clientes, vehículos y conductores al cargar la página
    Promise.all([
        fetch('/clientes2').then(response => response.json()), // Cambiar la ruta a /clientes2
        fetch('/vehiculos').then(response => response.json()),
        fetch('/conductoress').then(response => response.json())
    ]).then(([clientes, vehiculos, conductores]) => {
        // Llenar select de clientes
        const clienteSelect = document.getElementById('cliente');
        clientes.forEach(cliente => {
            const option = document.createElement('option');
            option.value = cliente.id;
            option.textContent = cliente.nombre;
            clienteSelect.appendChild(option);
        });

        // Llenar select de conductores
        const conductorSelect1 = document.getElementById('conductor1');
        const conductorSelect2 = document.getElementById('conductor2');
        const conductorSelect3 = document.getElementById('conductor3');
        
        conductores.forEach(conductor => {
            const option1 = document.createElement('option');
            const option2 = document.createElement('option');
            const option3 = document.createElement('option');
            option1.value = conductor.id;
            option2.value = conductor.id;
            option3.value = conductor.id;
            option1.textContent = conductor.conductor;
            option2.textContent = conductor.conductor;
            option3.textContent = conductor.conductor;
            conductorSelect1.appendChild(option1);
            conductorSelect2.appendChild(option2);
            conductorSelect3.appendChild(option3);
        });

        // Agregar la opción N/A en cada select de conductores
        const optionNA = document.createElement('option');
        optionNA.value = "NA";
        optionNA.textContent = "N/A";
        conductorSelect1.appendChild(optionNA.cloneNode(true));
        conductorSelect2.appendChild(optionNA.cloneNode(true));
        conductorSelect3.appendChild(optionNA.cloneNode(true));

        // Llenar select de placas
        const placaSelect = document.getElementById('placa');
        vehiculos.forEach(vehiculo => {
            const option = document.createElement('option');
            option.value = vehiculo.placa;
            option.textContent = vehiculo.placa;
            placaSelect.appendChild(option);
        });
    }).catch(error => {
        console.error('Error al cargar datos:', error);
        alert('Error al cargar datos. Por favor, inténtalo de nuevo.');
    });
});

  document.addEventListener('DOMContentLoaded', function() {
        document.getElementById('convertirBtn').addEventListener('click', function() {
            // Captura el elemento contenedor que deseas convertir en imagen
            const container = document.getElementById('FUEC'); // Cambia el ID a "contenido"

            // Opciones de configuración para html2canvas (opcional)
          const options = {
    windowWidth: document.getElementById('contenido').scrollWidth,
    windowHeight: document.getElementById('contenido').scrollHeight
};

            // Usa html2canvas para capturar el contenido HTML y convertirlo en una imagen
            html2canvas(container, options).then(canvas => {
                // Convierte el canvas en una URL de datos
                const dataUrl = canvas.toDataURL();

                // Crea un enlace para descargar la imagen
                const a = document.createElement('a');
                a.href = dataUrl;
                a.download = 'FUEC_VIANCO';
                a.textContent = 'Descargar Imagen';
                document.body.appendChild(a);

                // Simula un clic en el enlace para iniciar la descarga
                a.click();
            });
        });
    });
</script>

</body>
</html>