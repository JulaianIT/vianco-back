<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Seguimiento de PQRS</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }
        h1 {
            text-align: center;
            color: #413d4b;
        }
        p {
            text-align: center;
            color: #666567;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            background-color: #fff;
        }
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #90c9a7; /* Verde claro */
            color: #fff;
            text-transform: uppercase;
            font-size: 14px;
        }
        td {
            font-size: 16px;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        tr:hover {
            background-color: #f1f1f1;
        }
        form {
            display: flex;
            align-items: center;
        }
        input[type="text"], input[type="date"] {
            width: 100%;
            padding: 8px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }
        input[readonly] {
            background-color: #f0f0f0; /* Color de fondo para campos de solo lectura */
            cursor: not-allowed; /* Cambia el cursor a no permitido */
        }
        button {
            margin-left: 10px;
            padding: 8px 16px;
            background-color: #75b895; /* Verde más oscuro */
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
        button:hover {
            background-color: #90c9a7; /* Verde claro */
        }
    </style>
</head>
<body>
    <h1>Seguimiento de PQRS</h1>
    <p>Bienvenido, {{ nombreUsuario }}</p>

    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>Fecha</th>
                <th>Correo</th>
                <th>Realiza</th>
                <th>Descripción</th>
                <th>Estado</th>
                <th>Responsable</th>
                <th>Fecha de Seguimiento</th>
                <th>Seguimiento</th>
                <th>Acciones</th>
                <th>Acción</th>
            </tr>
        </thead>
        <tbody>
            {{#each pqrsList }}
            <tr>
                <td>{{ this.id }}</td>
                <td>{{ formatDate this.fecha }}</td>
                <td>{{ this.correo }}</td>
                <td>{{ this.realiza }}</td>
                <td>{{ this.descripcion }}</td>
                <td>{{ this.estado }}</td>
                    <form class="formSeguimiento" method="POST" action="/guardar-seguimientoo">

<td><input type="text" name="responsable" placeholder="Ingrese el responsable" value="{{../ nombreUsuario }}" required readonly></td>
<td><input type="text" name="fechaSeguimiento" placeholder="DD/MM/AAAA" required readonly></td>
<td><textarea name="seguimiento" placeholder="Escribe el seguimiento aquí" required>{{ this.seguimiento }}</textarea></td>
<td><textarea name="acciones" placeholder="Escribe las acciones aquí" required>{{ this.acciones }}</textarea></td>
  
                <td>
                        <input type="hidden" name="formatDatefecha" id="formatDatefecha">

                        <input type="hidden" name="pqrsId" value="{{ this.id }}">
                        <input type="hidden" name="correo" value="{{ this.correo }}">
                       
                        <input type="hidden" name="realiza" value="{{ this.realiza }}">
                       
                        <input type="hidden" name="descripcion" value="{{ this.descripcion }}">
                   <input type="hidden" name="fecha" value="{{ formatDate this.fecha }}">
                        <input type="hidden" name="estado" value="Respondida">
                        <button type="submit">Guardar Seguimiento</button>
                    </form>
                </td>
            </tr>
            {{/each}}
        </tbody>
    </table>

    <script>
        
        function validateForm() {
            const responsable = document.getElementsByName('responsable')[0].value;
            const fechaSeguimiento = document.getElementsByName('fechaSeguimiento')[0].value;
            const seguimiento = document.getElementsByName('seguimiento')[0].value;
            const acciones = document.getElementsByName('acciones')[0].value;

            if (responsable.trim() === '' || fechaSeguimiento.trim() === '' || seguimiento.trim() === '' || acciones.trim() === '') {
                alert('Todos los campos son obligatorios');
                return false; // Evita enviar el formulario si algún campo está vacío
            }

            return true; // Envía el formulario si todos los campos están completos
        }

        // Función para formatear la fecha
        function formatDate(dateString) {
            const options = { year: 'numeric', month: '2-digit', day: '2-digit' };
            return new Date(dateString).toLocaleDateString('es-ES', options);
        }

        // Al cargar la página, establece la fecha actual en el campo de fecha de seguimiento
        window.onload = function() {
            const camposFechaSeguimiento = document.getElementsByName('fechaSeguimiento');
            for (let i = 0; i < camposFechaSeguimiento.length; i++) {
                camposFechaSeguimiento[i].value = getCurrentDate();
            }
        };

        // Función para obtener la fecha actual en formato DD/MM/AAAA
        function getCurrentDate() {
            const now = new Date();
            let day = now.getDate().toString().padStart(2, '0'); // Asegura que el día tenga dos dígitos
            let month = (now.getMonth() + 1).toString().padStart(2, '0'); // Asegura que el mes tenga dos dígitos
            const year = now.getFullYear();

            return `${day}/${month}/${year}`;
        }
        
    </script>

  <script>
        document.getElementById('formSeguimiento').addEventListener('submit', function(event) {
            event.preventDefault(); // Evita que el formulario se envíe automáticamente

            const formData = new FormData(this);

            fetch('/guardar-seguimientoo', {
                method: 'POST',
                body: formData
            })
            .then(response => response.text())
            .then(data => {
                document.getElementById('mensaje').textContent = data;
                // Aquí puedes manejar cómo quieres mostrar la respuesta, por ejemplo, en un div
            })
            .catch(error => {
                console.error('Error al enviar el formulario:', error);
                document.getElementById('mensaje').textContent = 'Error al enviar el formulario';
            });
        });
    </script>
    <script>
    // Suponiendo que tienes una función para obtener la fecha formateada
    const fechaFormateada = obtenerFechaFormateada(); // Ajusta según tu lógica

    // Asigna la fecha formateada al campo oculto antes de enviar el formulario
    document.getElementById('formatDatefecha').value = fechaFormateada;
</script>
</script>
</body>
</html>
