<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Calculadora de Administración</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.6/handlebars.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.0/xlsx.full.min.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.0/xlsx.full.min.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #90c9a7; /* Color de fondo principal */
            color: #413d4b; /* Color de texto principal */
            padding: 20px;
            margin: 0;
            display: flex;
            justify-content: center;
        }

        .container {
            width: 80%;
            max-width: 1200px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            border-radius: 8px;
            overflow-x: auto;
        }

        h1 {
            text-align: center;
            color: #413d4b; /* Color de texto para el título */
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        th, td {
            padding: 12px;
            text-align: center;
            border: 1px solid #666567; /* Color de borde para celdas */
        }

        th {
            background-color: #666567; /* Color de fondo para encabezados */
            color: #fff; /* Color de texto para encabezados */
            font-weight: bold;
        }

        input[type="number"] {
            width: 60px;
            padding: 8px;
            text-align: center;
            border: 1px solid #666567;
            border-radius: 4px;
        }

        button {
            padding: 8px 16px;
            background-color: #413d4b; /* Color de fondo para botones */
            color: #fff; /* Color de texto para botones */
            border: none;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #666567; /* Color de fondo al pasar el cursor sobre botones */
        }

        @media (max-width: 768px) {
            .container {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <h1>CALCULAR ADMINISTRACION</h1>
    <div class="container">
        <table border="1">
            <thead>
                <tr>
                    <th>Placa</th>
                    <th>Conductor</th>
                    <th>Administración</th>
                    <th>Días Trabajados</th>
                    <th>Calculo administracion</th>
                    <th>Actualizar</th>
                    <th>Administracion de junio</th>
                </tr>
            </thead>
            <tbody>
                {{#each vehiculos}}
                    <tr id="row-{{@index}}">
                        <td>{{this.placa}}</td>
                        <td>{{this.NOMBRES_CONTRATO}}</td>
                        <td class="valor-administracion">{{this.VALOR_ADMINISTRACION}}</td>
                        <td><input type="number" name="diasTrabajados" class="dias-trabajados" data-index="{{@index}}" oninput="calcularValorPagar({{@index}})" min="1"></td>
                        <td class="valor-pagar">VALOR A PAGAR</td>
                        <td><button onclick="actualizarValorPagar({{@index}})">Actualizar</button></td>
                        <td>{{this.junio}}</td>
                    </tr>
                {{/each}}
            </tbody>
        </table>
        <button onclick="exportarAExcel()">Exportar a Excel</button>
    </div>

    <script>
        function calcularDiasMes(mes, año) {
            return new Date(año, mes, 0).getDate();
        }

        function llenarDiasTrabajados() {
            var fechaActual = new Date();
            var mes = fechaActual.getMonth() + 1; // Los meses en JavaScript van de 0 a 11
            var año = fechaActual.getFullYear();
            var diasDelMes = calcularDiasMes(mes, año);

            var inputsDiasTrabajados = document.querySelectorAll('.dias-trabajados');
            inputsDiasTrabajados.forEach(function(input) {
                input.value = diasDelMes;
                input.max = diasDelMes;
                calcularValorPagar(input.dataset.index); // Calcular el valor de inmediato
            });
        }

        function calcularValorPagar(index) {
            var row = document.getElementById('row-' + index);
            var diasTrabajadosInput = row.querySelector('.dias-trabajados');
            var valorAdministracionText = row.querySelector('.valor-administracion').innerText;
            var valorPagarCell = row.querySelector('.valor-pagar');
            var diasTrabajados = parseInt(diasTrabajadosInput.value);

            // Asegurarse de que valorAdministracionText se convierta correctamente a número
            var valorAdministracionText = row.querySelector('.valor-administracion').innerText.trim(); // Asegura que no haya espacios en blanco alrededor
            valorAdministracionText = valorAdministracionText.replace(/[$,]/g, ''); // Remueve símbolos como $ y ,
            var valorAdministracion = parseFloat(valorAdministracionText);

            // Verificar si los valores son números válidos
            if (isNaN(diasTrabajados) || isNaN(valorAdministracion)) {
                valorPagarCell.innerText = 'VALOR A PAGAR';
                return;
            }

            var valorPagar;
            if (diasTrabajados < 15) {
                valorPagar = valorAdministracion * 0.5;
            } else {
                valorPagar = valorAdministracion;
            }

            // Formatear el valor a pagar sin decimales si es un número entero
            valorPagarCell.innerText = '$' + (valorPagar % 1 === 0 ? valorPagar : valorPagar.toFixed(2));
        }

function actualizarValorPagar(index) {
    var row = document.getElementById('row-' + index);
    var placa = row.querySelector('td:first-child').innerText;
    var valorPagarCell = row.querySelector('.valor-pagar');
    var valorPagar = parseFloat(valorPagarCell.innerText.replace('$', ''));

    // Obtener el mes actual
    var fechaActual = new Date();
    var meses = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'];
    var mesActual = meses[fechaActual.getMonth()];

    // Construir el objeto con la información a enviar al servidor
    var data = {
        mes: mesActual,
        valor: valorPagar,
        placa: placa
    };

    // Hacer la solicitud POST al servidor para actualizar el valor
    fetch('/actualizar_valor_pagar', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => response.text())
    .then(result => {
        console.log(result); // Resultado de la respuesta del servidor
        // Recargar la página después de la actualización exitosa
        location.reload();
    })
    .catch(error => {
        console.error('Error al actualizar el valor:', error);
        // Manejar errores aquí
    });
}



function exportarAExcel() {
    var wb = XLSX.utils.book_new();
    wb.Props = {
        Title: "Reporte de Administración",
        Subject: "Información de Administración",
        CreatedDate: new Date()
    };

    var ws_data = [];

    // Agregar encabezados manualmente
    var headersRow = ["Placa", "Conductor", "Valor Administración", "Administración de junio"];
    ws_data.push(headersRow);

    // Agregar filas
    var rows = document.querySelectorAll("table tbody tr");
    rows.forEach(function(row) {
        var dataRow = [];
        // Obtener las celdas que necesitas exportar
        var placa = row.querySelector('td:nth-child(1)').innerText;
        var conductor = row.querySelector('td:nth-child(2)').innerText;
        var valorAdministracion = row.querySelector('.valor-administracion').innerText;
        var junio = row.querySelector('td:nth-child(7)').innerText;

        // Agregar los datos en el orden deseado
        dataRow.push(placa, conductor, valorAdministracion, junio);
        ws_data.push(dataRow);
    });

    var ws = XLSX.utils.aoa_to_sheet(ws_data);
    XLSX.utils.book_append_sheet(wb, ws, "Administración");

    // Generar el archivo Excel y descargarlo
    XLSX.writeFile(wb, 'reporte_administracion.xlsx');
}


        // Llenar automáticamente los campos de días trabajados con los días del mes actual al cargar la página
        window.onload = function() {
            llenarDiasTrabajados();
            completarTituloCostosAdministracion();
        };

        function completarTituloCostosAdministracion() {
            var fechaActual = new Date();
            var meses = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'];
            var mesActual = meses[fechaActual.getMonth()];
            var thCostosAdministracion = document.querySelector('th:nth-child(5)');
            thCostosAdministracion.innerText = 'Calculo administracion '  + mesActual;
        }
    </script>
</body>
</html>
























